import React, { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';

const AdminDashboard: React.FC = () => {
  const dispatch = useDispatch();
  const [stats, setStats] = useState({
    totalUsers: 0,
    totalOrders: 0,
    totalTours: 0,
    totalHotels: 0,
    totalRevenue: 0,
    openTickets: 0,
    recentOrders: [] as any[],
    popularTours: [] as any[]
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  
  useEffect(() => {
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API
    setLoading(true);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    setTimeout(() => {
      setStats({
        totalUsers: 356,
        totalOrders: 123,
        totalTours: 42,
        totalHotels: 15,
        totalRevenue: 1250000,
        openTickets: 8,
        recentOrders: [
          { 
            id: 1, 
            user: { fullName: '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω' }, 
            tour: { name: '–¢—É—Ä –ø–æ –°–æ—á–∏' },
            totalPrice: 25000,
            status: 'confirmed',
            createdAt: '2023-05-15'
          },
          { 
            id: 2, 
            user: { fullName: '–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä' }, 
            tour: { name: '–ì–æ—Ä–Ω—ã–π –∫—É—Ä–æ—Ä—Ç' },
            totalPrice: 35000,
            status: 'pending',
            createdAt: '2023-05-18'
          },
          { 
            id: 3, 
            user: { fullName: '–°–∏–¥–æ—Ä–æ–≤ –ü–∞–≤–µ–ª' }, 
            tour: { name: '–≠–∫—Å–∫—É—Ä—Å–∏—è –ø–æ –ú–æ—Å–∫–≤–µ' },
            totalPrice: 15000,
            status: 'paid',
            createdAt: '2023-05-20'
          },
        ],
        popularTours: [
          { id: 1, name: '–¢—É—Ä –≤ –°–æ—á–∏', orders: 45, revenue: 1125000 },
          { id: 2, name: '–ì–æ—Ä–Ω—ã–π –∫—É—Ä–æ—Ä—Ç "–ö—Ä–∞—Å–Ω–∞—è –ø–æ–ª—è–Ω–∞"', orders: 32, revenue: 960000 },
          { id: 3, name: '–≠–∫—Å–∫—É—Ä—Å–∏—è –ø–æ –ú–æ—Å–∫–≤–µ', orders: 28, revenue: 420000 },
          { id: 4, name: '–ó–æ–ª–æ—Ç–æ–µ –∫–æ–ª—å—Ü–æ –†–æ—Å—Å–∏–∏', orders: 24, revenue: 840000 },
          { id: 5, name: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ - –°–µ–≤–µ—Ä–Ω–∞—è —Å—Ç–æ–ª–∏—Ü–∞', orders: 20, revenue: 600000 },
        ]
      });
      setLoading(false);
    }, 800);
  }, []);
  
  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB' }).format(amount);
  };
  
  const formatDate = (dateString: string) => {
    const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };
    return new Date(dateString).toLocaleDateString('ru-RU', options);
  };
  
  return (
    <div className="admin-dashboard">
      <div className="admin-header">
        <h2>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>
      </div>
      
      {loading ? (
        <div className="admin-loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      ) : error ? (
        <div className="admin-error">{error}</div>
      ) : (
        <>
          <div className="dashboard-stats">
            <div className="stat-card">
              <div className="stat-icon">üë•</div>
              <div className="stat-info">
                <div className="stat-value">{stats.totalUsers}</div>
                <div className="stat-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
              </div>
            </div>
            
            <div className="stat-card">
              <div className="stat-icon">üßæ</div>
              <div className="stat-info">
                <div className="stat-value">{stats.totalOrders}</div>
                <div className="stat-label">–ó–∞–∫–∞–∑–æ–≤</div>
              </div>
            </div>
            
            <div className="stat-card">
              <div className="stat-icon">üè®</div>
              <div className="stat-info">
                <div className="stat-value">{stats.totalHotels}</div>
                <div className="stat-label">–û—Ç–µ–ª–µ–π</div>
              </div>
            </div>
            
            <div className="stat-card">
              <div className="stat-icon">‚úàÔ∏è</div>
              <div className="stat-info">
                <div className="stat-value">{stats.totalTours}</div>
                <div className="stat-label">–¢—É—Ä–æ–≤</div>
              </div>
            </div>
            
            <div className="stat-card">
              <div className="stat-icon">üí∞</div>
              <div className="stat-info">
                <div className="stat-value">{formatCurrency(stats.totalRevenue)}</div>
                <div className="stat-label">–û–±—â–∏–π –¥–æ—Ö–æ–¥</div>
              </div>
            </div>
            
            <div className="stat-card">
              <div className="stat-icon">üé´</div>
              <div className="stat-info">
                <div className="stat-value">{stats.openTickets}</div>
                <div className="stat-label">–û—Ç–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤</div>
              </div>
            </div>
          </div>
          
          <div className="dashboard-grid">
            <div className="dashboard-panel recent-orders">
              <h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã</h3>
              <table className="dashboard-table">
                <thead>
                  <tr>
                    <th>ID</th>
                    <th>–ö–ª–∏–µ–Ω—Ç</th>
                    <th>–¢—É—Ä</th>
                    <th>–°—Ç–∞—Ç—É—Å</th>
                    <th>–°—É–º–º–∞</th>
                    <th>–î–∞—Ç–∞</th>
                  </tr>
                </thead>
                <tbody>
                  {stats.recentOrders.map(order => (
                    <tr key={order.id}>
                      <td>{order.id}</td>
                      <td>{order.user.fullName}</td>
                      <td>{order.tour.name}</td>
                      <td>
                        <span className={`status-badge status-${order.status}`}>
                          {order.status}
                        </span>
                      </td>
                      <td>{formatCurrency(order.totalPrice)}</td>
                      <td>{formatDate(order.createdAt)}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
            
            <div className="dashboard-panel popular-tours">
              <h3>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—É—Ä—ã</h3>
              <table className="dashboard-table">
                <thead>
                  <tr>
                    <th>–¢—É—Ä</th>
                    <th>–ó–∞–∫–∞–∑–æ–≤</th>
                    <th>–î–æ—Ö–æ–¥</th>
                  </tr>
                </thead>
                <tbody>
                  {stats.popularTours.map(tour => (
                    <tr key={tour.id}>
                      <td>{tour.name}</td>
                      <td>{tour.orders}</td>
                      <td>{formatCurrency(tour.revenue)}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </>
      )}
    </div>
  );
};

export default AdminDashboard; 